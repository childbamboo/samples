- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Å°ñ‚ëËï∂
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

CREATE TABLE Payroll
(check_nbr INTEGER NOT NULL PRIMARY KEY,
 check_amt DECIMAL(8,2) NOT NULL,
 ... );

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Å°ìöÇ¶ÇªÇÃ1
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

CREATE VIEW AmtCounts
AS SELECT COUNT(*) AS check_cnt
     FROM Payroll
    GROUP BY check_amt;

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

SELECT check_amt, COUNT(*)
  FROM Payroll
 GROUP BY check_amt
HAVING COUNT(*) = (SELECT MAX(check_cnt)
                     FROM AmtCounts);

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Å°ìöÇ¶ÇªÇÃ2
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

SELECT check_amt, COUNT(*) AS check_cnt
  FROM Payroll
 GROUP BY check_amt
HAVING COUNT(*) = (SELECT MAX(check_cnt)
                     FROM (SELECT COUNT(*) AS check_cnt
                             FROM Payroll
                            GROUP BY check_amt));

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Å°ìöÇ¶ÇªÇÃ3
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

SELECT check_amt, COUNT(*) AS check_cnt
  FROM Payroll
 GROUP BY check_amt
HAVING COUNT(*) >= ALL (SELECT COUNT(*) AS check_cnt
                          FROM Payroll
                         GROUP BY check_amt);
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Å°ìöÇ¶ÇªÇÃ4
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

SELECT check_amt,
       COUNT(*) OVER (PARTITION BY check_amt) AS check_cnt
  FROM Payroll;



=================================================================
This article was published in JOE CELKO'S SQL PUZZLES AND ANSWERS
Second Edition, Joe Celko, pp.123 - 125, Copyright Elsevier 2006.
